// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrelloBack.Models;

#nullable disable

namespace TrelloBack.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240620081537_requiredadd")]
    partial class requiredadd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("TrelloBack.Models.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("contenu");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("TacheId")
                        .HasColumnType("INT")
                        .HasColumnName("tache_id");

                    b.HasKey("Id");

                    b.HasIndex("TacheId");

                    b.ToTable("Commentaire", (string)null);
                });

            modelBuilder.Entity("TrelloBack.Models.Liste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("nom");

                    b.Property<int?>("ProjetId")
                        .HasColumnType("INT")
                        .HasColumnName("projet_id");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.ToTable("Liste", (string)null);
                });

            modelBuilder.Entity("TrelloBack.Models.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("Projet", (string)null);
                });

            modelBuilder.Entity("TrelloBack.Models.Tache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("ListeId")
                        .HasColumnType("INT")
                        .HasColumnName("liste_id");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.HasIndex("ListeId");

                    b.ToTable("Tache", (string)null);
                });

            modelBuilder.Entity("TrelloBack.Models.Commentaire", b =>
                {
                    b.HasOne("TrelloBack.Models.Tache", "Tache")
                        .WithMany("Commentaires")
                        .HasForeignKey("TacheId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Tache");
                });

            modelBuilder.Entity("TrelloBack.Models.Liste", b =>
                {
                    b.HasOne("TrelloBack.Models.Projet", "Projet")
                        .WithMany("Listes")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("TrelloBack.Models.Tache", b =>
                {
                    b.HasOne("TrelloBack.Models.Liste", "Liste")
                        .WithMany("Taches")
                        .HasForeignKey("ListeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Liste");
                });

            modelBuilder.Entity("TrelloBack.Models.Liste", b =>
                {
                    b.Navigation("Taches");
                });

            modelBuilder.Entity("TrelloBack.Models.Projet", b =>
                {
                    b.Navigation("Listes");
                });

            modelBuilder.Entity("TrelloBack.Models.Tache", b =>
                {
                    b.Navigation("Commentaires");
                });
#pragma warning restore 612, 618
        }
    }
}
